/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'com.tavern.groovy-common-conventions'
}

mainClassName = 'com.asm.tavern.discord.app.App'
version = '1.0.0'
description = 'Tavern discord integration'

dependencies {
    implementation project(':utilities')
    implementation project(':discord')
    implementation project(':domain')
    implementation project(':audio')
    implementation project(':repository')
    implementation project(':drinks')

    implementation libs.bundles.core
}

application {
    // Define the main class for the application.
    mainClass = mainClassName
}

distributions {
    main {
        contents {
            from '../'
            include '*.properties'
        }
    }
}

jar {
    duplicatesStrategy DuplicatesStrategy.WARN
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    archiveBaseName = 'tavern'
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    // TODO: EMM Refactor this directory stuff. Currently a mess
    def originalDestDir = jar.destinationDirectory.getAsFile().get()
    File newDestDir = new File("${jar.destinationDirectory.getAsFile().get()}/Tavern-${version}")
    newDestDir.mkdir()
    destinationDirectory = newDestDir
    destinationDirectory = newDestDir
}

tasks.register("scriptDeploy", Copy) {
    new File("${jar.destinationDirectory.getAsFile().get()}/").mkdirs()
    new File("${jar.destinationDirectory.getAsFile().get()}/launchTavern.bat").text =
            "java -jar tavern.jar\n" +
                    "pause"

    new File("${jar.destinationDirectory.getAsFile().get()}/launchTavern.sh").text =
            "#!/usr/bin/env bash\n" +
                    "java -jar tavern.jar\n"

    from("../")
    include("tavern-discord.properties")
    includeEmptyDirs = false
    into(new File("${jar.destinationDirectory.getAsFile().get()}/"))
}

tasks.named("build") { finalizedBy("scriptDeploy") }
