/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'com.asm.tavern.discord.groovy-application-conventions'
    id 'distribution'
}

mainClassName = 'com.asm.tavern.discord.app.App'
version = '1.0.0'
description = 'Tavern discord integration'

dependencies {
    implementation project(':utilities')
    implementation project(':discord')
    implementation project(':domain')
    implementation project(':audio')
    implementation project(':repository')
    implementation project(':drinks')
}

application {
    // Define the main class for the application.
    mainClass = mainClassName
}

distributions {
    main {
        contents {
            from '../'
            include '*.properties'
        }
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    baseName 'tavern'
    archiveFileName = "${archiveBaseName.get()}.${jar.archiveExtension.get()}"
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    new File(jar.getDestinationDirectory().getAsFile().get(), "/Tavern-${archiveVersion.get()}").mkdir()
    getDestinationDirectory().set(new File(jar.getDestinationDirectory().getAsFile().get() , "/Tavern-${archiveVersion.get()}"))

}

tasks.register("scriptDeploy", Copy) {
    new File(jar.getDestinationDirectory().getAsFile().get(), "/").mkdirs()
    new File(jar.getDestinationDirectory().getAsFile().get(), "/launchTavern.bat").text =
            "java -jar tavern.jar\n" +
                    "pause"

    new File(jar.getDestinationDirectory().getAsFile().get(), "/launchTavern.sh").text =
            "#!/usr/bin/env bash\n" +
                    "java -jar tavern.jar\n"

    from("../")
    include("tavern-discord.properties")
    includeEmptyDirs = false
    into(new File(jar.getDestinationDirectory().getAsFile().get(), "/"))
}

tasks.named("build") { finalizedBy("scriptDeploy") }
