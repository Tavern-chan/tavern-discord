/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'
    id 'java-library'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
    // Has to add the below for lavaplayer fork
    mavenLocal()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url = 'https://m2.dv8tion.net/releases'
    }
}

dependencies {
    // Use the latest Groovy version for building this library
    // implementation 'org.codehaus.groovy:groovy-all'
    implementation "org.codehaus.groovy:groovy:3.0.7"

    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.3'
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.3'
    implementation group: 'org.springframework', name: 'spring-beans', version: '5.3.3'

    // Discord JDS API
    implementation 'net.dv8tion:JDA:5.0.0-beta.6'

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.7'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
    implementation group: 'org.slf4j', name: 'slf4j-ext', version: '2.0.7'

    // Util
    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'

    // mandatory dependencies for using Spock
    testImplementation platform("org.spockframework:spock-bom:2.0-M4-groovy-3.0")
    testImplementation "org.spockframework:spock-core"
    testImplementation "org.spockframework:spock-junit4"  // you can remove this if your code does not rely on old JUnit 4 rules

    // optional dependencies for using Spock
    testImplementation "org.hamcrest:hamcrest-core:2.2"   // only necessary if Hamcrest matchers are used
    testRuntimeOnly "net.bytebuddy:byte-buddy:1.10.10" // allows mocking of classes (in addition to interfaces)
    testRuntimeOnly "org.objenesis:objenesis:3.1"      // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)

}

// tasks.named('test') {
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
